name: Deploy
inputs:
  key:
    description: SSH key to use when deploying
    required: true
  server:
    description: Server to which the deployment will happen
    required: true
  serverPort:
    description: Server port to which the deployment will happen
    required: false
  registryAuth:
    description: (optional) Registry auth in the form host:user:pass
    required: false
  service:
    description: Service name
    required: true
  wireguard:
    description: (optional) WireGuard config to use when connecting
    required: false
runs:
  using: composite
  steps:
    - name: Deploy
      shell: bash
      env:
        SSH_KEY: ${{ inputs.key }}
        SSH_SERVER: ${{ inputs.server }}
        SSH_SERVICE: ${{ inputs.service }}
        SSH_SERVER_PORT: ${{ inputs.serverPort }}
        WIREGUARD_CONFIG: ${{ inputs.wireguard }}
        REGISTRY_AUTH: ${{ inputs.registryAuth }}
      run: |
        set -euo pipefail

        if [[ -n "$WIREGUARD_CONFIG" ]]; then
          # based on https://github.com/niklaskeerl/easy-wireguard-action/blob/main/action.yml
          apt update
          apt install resolvconf wireguard
          echo "$WIREGUARD_CONFIG" > /tmp/wg0.conf
          sudo chmod 600 /tmp/wg0.conf
          sudo wg-quick up ./wg0.conf
        fi

        echo "$SSH_KEY" > /tmp/key
        chmod 600 /tmp/key

        args="container=$(echo -n "$SSH_SERVICE" | base64 -w 0)"
        if [[ -n "$REGISTRY_AUTH" ]]; then
          args+=" auth=$(echo -n "$REGISTRY_AUTH" | base64 -w 0)"
        fi

        ssh -o StrictHostKeyChecking=no -i /tmp/key desu-deploy@$SSH_SERVER -p ${SSH_SERVER_PORT:-22} "$args"

